/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 0>, <&to 0>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1          &kp F2          &kp F3       &kp F4          &kp F5                                                                                                   &kp F6             &kp F7           &kp F8       &kp F9                   &kp F10
&kp EQUAL       &kp N1          &kp N2       &kp N3          &kp N4            &kp N5                                                                         &kp N6  &kp N7             &kp N8           &kp N9       &kp N0                   &kp MINUS
&kp ESCAPE      &kp Q           &kp W        &kp E           &kp R             &kp T                                                                          &kp Y   &kp U              &kp I            &kp O        &kp P                    &kp BSLH
&kp CAPS        &mt LEFT_ALT A  &mt LCTRL S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G                                                                          &kp H   &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt RCTRL L  &mt RIGHT_ALT SEMI       &kp SQT
&kp LEFT_SHIFT  &kp Z           &kp X        &kp C           &kp V             &kp B   &to 0      &to 1          &kp HOME  &kp PAGE_UP    &to 2    &none      &kp N   &kp M              &kp COMMA        &kp DOT      &kp FSLH                 &kp RIGHT_SHIFT
&mo 1           &kp LCTRL       &kp GRAVE    &kp LEFT        &kp RIGHT                 &kp SPACE  &kp BACKSPACE  &kp END   &kp PAGE_DOWN  &kp TAB  &kp ENTER          &kp UP             &kp DOWN         &kp LBKT     &mt RCTRL RIGHT_BRACKET  &mo 2
            >;
        };

        symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                                     &kp AT_SIGN           &kp DOLLAR             &kp EXCLAMATION  &kp PERCENT    &trans
&trans  &trans  &trans  &trans  &trans          &trans                                                  &kp CARET          &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION     &kp ASTERISK   &trans
&trans  &trans  &trans  &trans  &trans          &trans                                                  &kp SINGLE_QUOTE   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON    &kp PLUS       &trans
&trans  &trans  &trans  &trans  &kp LEFT_SHIFT  &trans                                                  &kp DOUBLE_QUOTES  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOT          &kp MINUS      &trans
&trans  &trans  &trans  &trans  &trans          &trans  &to 0   &to 1   &trans  &trans  &to 2   &trans  &kp GRAVE          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL        &kp AMPERSAND  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans                     &kp NON_US_BACKSLASH  &kp SLASH              &kp HASH         &none          &trans
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR_ALL  &none            &none            &none            &none                                                                              &none  &none  &none  &none  &none
&none           &none            &none            &none            &none            &none                                                      &none  &none  &none  &none  &none  &none
&none           &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                            &none  &none  &none  &none  &none  &none
&bootloader     &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                            &none  &none  &none  &none  &none  &bootloader
&sys_reset      &none            &none            &none            &none            &out OUT_USB     &to 0  &to 1  &none  &none  &to 2  &none  &none  &none  &none  &none  &none  &sys_reset
&bt BT_CLR      &bt_0            &bt_1            &bt_2            &bt_3                             &none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };
    };
};
